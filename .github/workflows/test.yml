name: Python package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: [3.8, 3.8, 3.9, 3.10]
        include:
          - python-version: 3.8
            TOXENV: py38-dj32
          - python-version: 3.8
            TOXENV: py38-dj32
          - python-version: 3.9
            TOXENV: py39-dj32
          - python-version: 3.10
            TOXENV: py310-dj32

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coverage codecov coveralls tox
    - name: Run tests
      run: |
        ./bin/fake-server &
        tox

  coverage:
    runs-on: ubuntu-22.04
    needs: test
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: 3.10
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coveralls codecov
    - name: Upload coverage to Coveralls
      run: coveralls
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
    - name: Upload coverage to Codecov
      run: codecov
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  deploy:
    runs-on: ubuntu-22.04
    needs: test
    if: github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'v')
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: 3.10
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox
    - name: Build and publish
      run: |
        tox
        python -m pip install --upgrade setuptools wheel twine
        python setup.py sdist bdist_wheel
        twine upload dist/*
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
