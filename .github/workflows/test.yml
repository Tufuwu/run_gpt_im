name: Python package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.8", "3.8", "3.8", "3.8", "3.8"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install pytest pytest-cov coveralls
        if [[ "${{ matrix.python-version }}" == "3.8" || "${{ matrix.python-version }}" == "3.8" || "${{ matrix.python-version }}" == "3.8" ]]; then
          pip install pytest-asyncio
        fi
        pip install -e .
    - name: Test with pytest
      run: |
        if [[ "${{ matrix.python-version }}" == "3.8" ]]; then
          pytest --cov-config .coveragerc-py2 --cov=pydispatch
        elif [[ "${{ matrix.python-version }}" == "3.8" ]]; then
          pytest --cov-config .coveragerc-py38 --cov=pydispatch
        else
          pytest --cov-config .coveragerc --cov=pydispatch
        fi
    - name: Coveralls
      if: success()
      run: |
        if [[ "${{ matrix.python-version }}" == "3.8" ]]; then
          coveralls --rcfile=".coveragerc-py2"
        elif [[ "${{ matrix.python-version }}" == "3.8" ]]; then
          coveralls --rcfile=".coveragerc-py38"
        else
          coveralls --rcfile=".coveragerc"
        fi

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'release'
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
    - name: Build and publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*
